merge master into local:
   git pull
   or maybe git merge
   ...for conflicts, edit, then git add THEFILE, and 'git commit' the whole merge
   -----------
merge fork into master
   git remote -v
   git remote add tlstream https://github.com/tomlechner/laxkit.git
   git fetch tlstream
   git merge tlstream/master
   git push

show stuff committed but not pushed:
	git diff --stat --cached origin/master

undo last commit: 
	git reset --soft 'HEAD^'

Remove all uncommitted working changes:  git checkout -- .

ignore files:
 in top:  .git/info/exclude, add:
 	*.[ao]
	makedepend
	makedepend.bak
	.*swp

git log --summary file     --> more detailed of what changed in commit, like file permissions

git log --follow -p file
 --> file history past renames

git log -s -p file
 --> file history not past renames

compare last 10 commints:  git diff HEAD~10 HEAD -- core/ustring.h
compare last 2 commints:   git diff HEAD~2 HEAD -- core/ustring.h

git status -s  == svn status

git commit -a  -m 'message' == commit all that's going LOCALLY

git push origin master    == commit TO REMOTE MASTER BRANCH

-------------branches--------------------------

what branch are you on:            git branch
switch to branch:                  git checkout thebranch
merge another branch into current: git check currentbranch;  git merge otherbranch
list branches:                     git branch -a
compare between branches:          git diff mybranch master -- myfile.cs


combine/merge last two commits:    git rebase -i HEAD~2

git remote add upstream https://github.com/godotengine/godot
git fetch upstream
merge without creating merge commit: git pull --rebase upstream master

git commit --amend     <- merge current changes with previous commit

git branch -d branch_name  <- delet a branch





-------------fixing--------------------------

restoring last revision of a file:
  git reset --hard    <- resets all files "unstages"
  git checkout HEAD -- filename
